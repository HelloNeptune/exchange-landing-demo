:root,
:host {
  --font-sans: Proxima Nova, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  --color-white: #fff;
  --spacing: .25rem;
  --container-lg: 32rem;
  --container-2xl: 42rem;
  --font-size: 16px;
  --text-xs: .75rem;
  --text-xs--line-height: calc(1 / .75);
  --text-sm: .875rem;
  --text-sm--line-height: calc(1.25 / .875);
  --text-base: 1rem;
  --text-base--line-height: calc(1.5 / 1);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --text-2xl: 1.5rem;
  --text-3xl: 1.875rem;
  --text-4xl: 2.25rem;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --default-transition-duration: .15s;
  --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  --default-font-family: var(--font-sans);
  --default-font-feature-settings: var(--font-sans--font-feature-settings);
  --default-font-variation-settings: var(--font-sans--font-variation-settings);
  --brand-green: #87c241;
  --brand-green-dark: #63a022;
  --brand-gray: #848f93;
  --brand-dark: #354e57;
  --background: #eef3f4;
  --foreground: #354e57;
  --card: #fff;
  --card-foreground: #354e57;
  --popover: #fff;
  --popover-foreground: #354e57;
  --primary: #87c241;
  --primary-foreground: #fff;
  --secondary: #63a022;
  --muted: #dfedcf;
  --muted-foreground: #848f93;
  --accent: #87c241;
  --accent-foreground: #fff;
  --destructive: #ef4444;
  --border: #dfedcf;
  --input: #0000;
  --input-background: #fff;
  --font-weight-bold: 700;
  --font-weight-semibold: 600;
  --font-weight-medium: 500;
  --ring: #87c241;

}

*,
:after,
:before,
::backdrop {
  box-sizing: border-box;
  border: 0 solid;
  margin: 0;
  padding: 0;
}


html,
body,
:host {
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  line-height: 1.5;
  font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
  font-feature-settings: var(--default-font-feature-settings, normal);
  font-variation-settings: var(--default-font-variation-settings, normal);
  -webkit-tap-highlight-color: transparent;
}

html {
  font-size: var(--font-size);
}

body {
  line-height: inherit;
  color: var(--foreground);
}

hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

h1 {
  font-size: var(--text-4xl);
  font-weight: var(--font-weight-bold);
  line-height: 1.2;
}

a {
  color: inherit;
  -webkit-text-decoration: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp,
pre {
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub,
sup {
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
  position: relative;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

:-moz-focusring {
  outline: auto;
}

progress {
  vertical-align: baseline;
}

summary {
  display: list-item;
}

ol,
ul,
menu {
  list-style: none;
}

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  vertical-align: middle;
  display: block;
}

img,
video {
  max-width: 100%;
  height: auto;
}

button,
input,
select,
optgroup,
textarea {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  opacity: 1;
  background-color: #0000;
  border-radius: 0;
}

::placeholder {
  opacity: 1;
  color: currentColor;
}

textarea {
  resize: vertical;
}

button,
input:where([type="button"], [type="reset"], [type="submit"]) {
  appearance: button;
}

* {
  border-color: var(--border);
  outline-color: var(--ring);
}

@property --ex-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --ex-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --ex-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --ex-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --ex-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --ex-gradient-position {
  syntax: "*";
  inherits: false
}

@property --ex-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --ex-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --ex-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --ex-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --ex-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --ex-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --ex-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --ex-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --ex-leading {
  syntax: "*";
  inherits: false
}

@property --ex-font-weight {
  syntax: "*";
  inherits: false
}

@property --ex-tracking {
  syntax: "*";
  inherits: false
}

@property --ex-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --ex-shadow-color {
  syntax: "*";
  inherits: false
}

@property --ex-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --ex-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --ex-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --ex-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --ex-ring-color {
  syntax: "*";
  inherits: false
}

@property --ex-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --ex-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --ex-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --ex-ring-inset {
  syntax: "*";
  inherits: false
}

@property --ex-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --ex-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --ex-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --ex-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --ex-blur {
  syntax: "*";
  inherits: false
}

@property --ex-brightness {
  syntax: "*";
  inherits: false
}

@property --ex-contrast {
  syntax: "*";
  inherits: false
}

@property --ex-grayscale {
  syntax: "*";
  inherits: false
}

@property --ex-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --ex-invert {
  syntax: "*";
  inherits: false
}

@property --ex-opacity {
  syntax: "*";
  inherits: false
}

@property --ex-saturate {
  syntax: "*";
  inherits: false
}

@property --ex-sepia {
  syntax: "*";
  inherits: false
}

@property --ex-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --ex-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --ex-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --ex-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --ex-duration {
  syntax: "*";
  inherits: false
}

@property --ex-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --ex-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --ex-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes enter {
  from {
    opacity: var(--ex-enter-opacity, 1);
    transform: translate3d(var(--ex-enter-translate-x, 0), var(--ex-enter-translate-y, 0), 0) scale3d(var(--ex-enter-scale, 1), var(--ex-enter-scale, 1), var(--ex-enter-scale, 1)) rotate(var(--ex-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--ex-exit-opacity, 1);
    transform: translate3d(var(--ex-exit-translate-x, 0), var(--ex-exit-translate-y, 0), 0) scale3d(var(--ex-exit-scale, 1), var(--ex-exit-scale, 1), var(--ex-exit-scale, 1)) rotate(var(--ex-exit-rotate, 0));
  }
}

@keyframes float {

  0%,
  100% {
    transform: translateY(0px) translateX(0px);
  }

  25% {
    transform: translateY(-60px) translateX(40px);
  }

  50% {
    transform: translateY(-80px) translateX(-70px);
  }

  75% {
    transform: translateY(-30px) translateX(90px);
  }
}